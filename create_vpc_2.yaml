---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      region: "us-west-1"
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: m5-image-gallery-vpc
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5 
        state: present
      register: vpc
    - name: Create Public Subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-ig-public-sn-1
          Module: 5
        cidr: 10.10.1.0/24
        state: present
      register: public_subnet1
    - name: Create Public Subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-ig-public-sn-2
          Module: 5
        cidr: 10.10.4.0/24
        state: present
      register: public_subnet2
    - name: Create Public Subnet 3
      ec2_vpc_subnet:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-ig-public-sn-3
          Module: 5
        cidr: 10.10.5.0/24
        state: present
      register: public_subnet3
    - name: Create Private Subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-ig-private-sn-1
          Module: 5
        cidr: 10.10.2.0/24
        state: present
      register: private_subnet1
    - name: Create Private Subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-ig-private-sn-2
          Module: 5
        cidr: 10.10.3.0/24
        state: present
      register: private_subnet2
    - name: Create Internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-img-gallery-igw
        state: present
      register: igw
    - name: Create NAT gateway
      ec2_vpc_nat_gateway:
        subnet_id: "{{ public_subnet1.subnet.id }}"
        wait: yes
        if_exist_do_not_create: true
        state: present
      register: new_nat_gateway
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-img-gallery-public-rtb
        subnets:
          - "{{ public_subnet1.subnet.id }}"
          - "{{ public_subnet2.subnet.id }}"
          - "{{ public_subnet3.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
    - name: Create private route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        tags:
          Name: m5-img-gallery-private-rtb
        subnets:
          - "{{ private_subnet1.subnet.id }}"
          - "{{ private_subnet2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            nat_gateway_id: "{{ new_nat_gateway.nat_gateway_id }}"
    - name: Create public ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        name: m5-img-gallery-public-acl
        subnets:
          - "{{ public_subnet1.subnet.id }}"
          - "{{ public_subnet2.subnet.id }}"
          - "{{ public_subnet3.subnet.id }}"
        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [200, 'tcp', 'allow', '73.93.235.103/32', null, null, 5000, 5000]
          - [300, 'tcp', 'allow', '0.0.0.0/0', 'null', 'null', 80, 80]
          - [400, 'tcp', 'allow', '0.0.0.0/0', 'null', 'null', 443, 443]
          - [900, 'tcp', 'allow', '0.0.0.0/0', 'null', 'null', 1024, 65535]
        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443] 
          - [900, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        state: present
    - name: Create private ACL
      ec2_vpc_nacl:
        vpc_id: "{{ vpc['vpc']['id'] }}"
        name: m5-img-gallery-private-acl
        subnets:
          - "{{ private_subnet1.subnet.id }}"
          - "{{ private_subnet2.subnet.id }}"
        ingress:
          - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432]
        egress:
          - [900, 'tcp', 'allow', '10.10.0.0/16', null, null, 1024, 65535]
        state: present
    - name: Create ig-developer security group
      ec2_group:
        name: m5-ig-development-2
        description: security group for M5 Project
        vpc_id: "{{ vpc['vpc']['id'] }}"
        state: present
      register: ig_devel_sg
    - name: Create ig-postgres security group
      ec2_group:
        name: m5-ig-postgres
        description: postgres security group
        vpc_id: "{{ vpc['vpc']['id'] }}"
        rules:
          - proto: tcp
            ports:
              - 5432
            group_name: "{{ ig_devel_sg.group_id }}" 
        state: present
      register: ig_postgres
    - name: Create ig-developer security group 2
      ec2_group:
        name: m5-ig-development-2
        description: security group for M5 Project
        vpc_id: "{{ vpc['vpc']['id'] }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all from port 22.
          - proto: tcp
            ports:
              - 80
              - 443
            cidr_ip:
              - 73.93.235.103/32
              - 24.196.25.139/32
              - 24.239.105.213/32
        state: present
